services:

  mysql:
    extends:
      file: common.yml
      service: mysql


  mailhog:
    extends:
      file: common.yml
      service: mailhog


  devcontainer:
    extends:
      file: common.yml
      service: devcontainer
    volumes:
      - "..:/var/www/html/.workspace"
      - "../.vscode:/var/www/html/.vscode"
    environment:
      PAGER: cat
      PHPINI_error_reporting: "E_ALL"
      PHPINI_display_startup_errors: "On"
      PHPINI_display_errors: "On"
      WORDPRESS_DEBUG: "yes"
      WORDPRESS_INSTALL_TITLE: "WordPress in devcontainer"
      WORDPRESS_CONST_WP_ENVIRONMENT_TYPE: "development"
      WORDPRESS_CONST_WP_DEVELOPMENT_MODE: "plugin"
      WORDPRESS_CONST_WP_DEBUG_LOG: 1
      WORDPRESS_CONST_WP_DEBUG_DISPLAY: 1
      WORDPRESS_CONST_WP_DISABLE_FATAL_ERROR_HANDLER: 1
      WORDPRESS_CONST_SCRIPT_DEBUG: 1
      WORDPRESS_CONST_SAVEQUERIES: 1
      WORDPRESS_CONST_QM_DISABLE_ERROR_HANDLER: 1  # https://github.com/johnbillion/query-monitor/blob/0741b15ea0bc05dc9b6fd71af246cf83cbc45f33/collectors/php_errors.php#L75
      WORDPRESS_CONST_QM_DARK_MODE: 1
      WORDPRESS_CONST_QM_ENABLE_CAPS_PANEL: 1
      WORDPRESS_CONFIG_EXTRA: |+
        require_once '/var/www/html/.workspace/.devcontainer/wp-config-injection.php';

        $$GLOBALS['wp_filter']['wp_php_error_message'][10][] = [
          'accepted_args' => 2,
          'function'      => function ( $$message, $$error ) {
            return $$error['message'] ? nl2br( $$error['message'] ) : $$message;
          },
        ];

        // Allow to any users to view Query Monitor.
        $$GLOBALS['wp_filter']['user_has_cap'][10][] = [
          'accepted_args' => 2,
          'function'      => function ( $$result, array $$caps ) {
            if ( isset( $$caps[0] ) && $$caps[0] === 'view_query_monitor' ) {
              $$result['view_query_monitor'] = true;
            }

            return $$result;
          },
        ];


networks:
  wordpress:
